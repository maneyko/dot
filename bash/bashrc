#!/bin/bash


# ---------------------------------------------------------------------
# System-wide
# ---------------------------------------------------------------------

test -r /etc/bashrc && {
  source /etc/bashrc
}

set +e
set -o ignoreeof
set -o notify

shopt -s cdspell                 >/dev/null 2>&1
shopt -s checkjobs               >/dev/null 2>&1
shopt -s expand_aliases          >/dev/null 2>&1
shopt -s extglob                 >/dev/null 2>&1
shopt -s hostcomplete            >/dev/null 2>&1
shopt -s no_empty_cmd_completion >/dev/null 2>&1

umask 0022

UNAME="$(uname)"


# Paths
# -----

PATH="\
$HOME/local/bin:\
$HOME/.bin:\
/usr/local/bin:\
/usr/local/sbin:\
/usr/bin:\
/usr/sbin:\
/bin:\
/sbin:\
"

MANPATH="\
$HOME/local/share/man:\
/usr/local/share/man:\
/usr/local/man:\
/usr/share/man:\
"


# ---------------------------------------------------------------------
# Interface
# ---------------------------------------------------------------------

case "$-" in
  *i*) INTERACTIVE=true ;;
  *) unset INTERACTIVE ;;
esac

test "$(command -v vim)" && {
  EDITOR='vim'
  alias vi='vim'
} || {
  EDITOR='vi'
}

test "$(command -v nvim)" && {
  EDITOR='nvim'
  alias vim='nvim'
  alias vi='nvim'
}

export EDITOR

GREP_COLOR='0;34'
export LESS='-RX'
export PAGER='less'

completions=(ag aws brew docker git hub npm tmux)
completion_dirs=(/usr/local/etc/bash_completion.d)

test -z "$BASH_COMPLETION" && {
  for comp_d in "${completion_dirs[@]}"; do
    test ! -d "$comp_d" && continue
    for prog in "${completions[@]}"; do
      for comp_f in $(ls $comp_d/${prog}* 2>/dev/null); do
        source "$comp_f"
      done
    done
  done
}

# Override `bash_completion` and disable tilde expansion
_expand() {
  return 0
}

# Reclaim <C-q> and <C-s>
test "$INTERACTIVE" && {
  stty -ixon
}

COLORS=$HOME/.config/colors/base16-custom.dark.sh
test "$TMUX" -a -f "$COLORS" -a $UNAME != 'Linux' && {
  source $COLORS
}

# Find and evaluate ``dircolors`` if exists
_dircolors="$(command -v gdircolors dircolors | head -1)"
test "$_dircolors" && {
  eval "$($_dircolors -b ~/.bash/dircolors)"
}


# ---------------------------------------------------------------------
# Prompt String 1
# ---------------------------------------------------------------------

clr() {  # (number, text)
  printf "\033[38;5;${1}m${2}\033[0m"
}
export -f clr

clr24() {  # ("r;g;b", text)
  printf "\033[38;2;${1}m${2}\033[0m"
}
export -f clr24

pclr() {  # (number, text)
  printf "\[\033[38;5;${1}m\]${2}\[\033[0m\]"
}

export PS1_NO_GIT=0

branch_colon() {
  test $PS1_NO_GIT -eq 1 && return

  branch=$(git branch 2> /dev/null | awk '/^\*/ {print $2}')
  test "$branch" && {
    echo ':'
  }
}
export -f branch_colon

parse_git_branch() {
  if test $PS1_NO_GIT -eq 1; then
    return
  fi
  branch=$(git branch 2> /dev/null | awk '/^\*/ {print $2}')
  echo $branch
}
export -f parse_git_branch

border_color=241
user_color=196
host_color=255
host_text='OSX'
pwd_color=228
test "$(whoami)" = 'root' && {
  user_color=220  # Yellow
}

LONG_PS1="\
`pclr $border_color  '┌─['                  `\
`pclr $user_color    "$(whoami)"            `\
`pclr 250            '@'                    `\
`pclr $host_color    "$host_text"           `\
`pclr $border_color  ':'                    `\
`pclr $pwd_color     '\\w'                  `\
`pclr $border_color  '\$(branch_colon)'     `\
`pclr 207            '\$(parse_git_branch)' `\
`pclr $border_color  ']'                    `\
\n\
`pclr $border_color  '└['                   `\
`pclr 7              '\\$'                  `\
`pclr $border_color  ']› '                  `\
"

SHORT_PS1="\
`clr $border_color  '┌─['         `\
`clr $user_color    "$(whoami)"   `\
`clr 250            '@'           `\
`clr $host_color    "$host_text"  `\
`clr $border_color  ':'           `\
`clr $pwd_color     '\\W'         `\
`clr $border_color  ']'           `\
\n\
`clr $border_color  '└['          `\
`clr 7              '\\$'         `\
`clr $border_color  ']› '         `\
"

export PS1="$LONG_PS1"


# ---------------------------------------------------------------------
# Aliases
# ---------------------------------------------------------------------

_cp="$(command -v gcp cp | head -1)"
alias cp="$_cp -i"

test "$(command -v ggrep)" && {
  alias grep='ggrep -i --color=auto'
} || {
  alias grep='grep -i --color=auto'
}

# ag ignores files that are in project's .gitignore
alias ag='ag --color-match "0;35" --hidden'

alias mv='mv -i'

function diff() {
  test -f /usr/local/etc/diff -a -n "$(command -v diff-so-fancy)" && {
    /usr/local/bin/diff --color -u "$@" | diff-so-fancy
  } || {
    /usr/bin/env diff "$@"
  }
}
export -f diff

# `ls` wrangling
# ----------------

_ls='ls'
test "$(command -v gls)" && {
  _ls='gls'
}
if $_ls --color / >/dev/null 2>&1; then
  GNU_LS=true
fi
if test -n "$GNU_LS"; then
  alias ls="$_ls --color=auto --group-directories-first --time-style +'%b %d %I:%M %p'"
  alias lsld="ls -AhlI'*'"
  alias lsd="ls -AI'*'"
else
  export CLICOLOR=1
  export LSCOLORS='ExGxFxdaCxDaDahbadacec'
  alias ls="$_ls -G"
fi
alias la='ls -A'
alias ll='ls -hl'
alias lla='ls -Ahl'
alias l='ll'


# Mini functions
alias bashrc='source ~/.bashrc'
alias cls="clear && printf '\e[3J'"
alias shortps1='export PS1=$SHORT_PS1'
alias longps1='export PS1="$LONG_PS1"'
alias rm-DS='find . -name .DS_Store -delete -print'
alias hide='chflags hidden'
alias nohide='chflags nohidden'

function mkdirpcd { mkdir -p "$1"; cd "$1"; }
export -f mkdirpcd

alias ..='cd ../'
for i in {2..8}; do
  alias .$i='cd '"$(printf '../%.0s' `seq 1 $i`)"
done

alias whois='whois -h whois.arin.net'

# Platform specific
test $UNAME = 'Darwin' && {
  alias top='top -u'
  alias mcopy='pbcopy'
  alias mpaste='pbpaste'
} || {
  alias mcopy='xclip -selection c'
  alias mpaste='xclip -o'
}


# ---------------------------------------------------------------------
# Python
# ---------------------------------------------------------------------

# My module
# export PYTHONPATH="$HOME/.ipython/maneyko:$PYTHONPATH"

test -f "$HOME/.pythonrc.py" && {
  PYTHONSTARTUP="$HOME/.pythonrc.py"
}


# ---------------------------------------------------------------------
# User Environment
# ---------------------------------------------------------------------

export TZ='America/Chicago'
export HISTSIZE=50000
export HISTTIMEFORMAT="%h %d %H:%M:%S "

test -s "$HOME/.rvm/scripts/rvm" && {
  source "$HOME/.rvm/scripts/rvm"  # Load RVM into a shell session *as a function*
}

test -f $HOME/.bash/greeting.bash && {
  source $HOME/.bash/greeting.bash
}

test -f $HOME/.bashrc.local && {
  source $HOME/.bashrc.local
}

# vim: ft=sh
