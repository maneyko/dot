#!/bin/bash


# ---------------------------------------------------------------------
# System-wide
# ---------------------------------------------------------------------

test -r /etc/bashrc && {
  source /etc/bashrc
}

set -o ignoreeof
set -o notify

shopt -s cdspell                 >/dev/null 2>&1
shopt -s checkjobs               >/dev/null 2>&1
shopt -s expand_aliases          >/dev/null 2>&1
shopt -s extglob                 >/dev/null 2>&1
shopt -s hostcomplete            >/dev/null 2>&1
shopt -s no_empty_cmd_completion >/dev/null 2>&1

umask 0022

: ${UNAME=$(uname)}


# Paths
# -----

PATH="\
$HOME/local/bin:\
$HOME/.bin:\
/usr/local/bin:\
/usr/local/sbin:\
/usr/bin:\
/usr/sbin:\
/bin:\
/sbin:\
"

MANPATH="\
$HOME/local/share/man:\
/usr/local/share/man:\
/usr/local/man:\
/usr/share/man:\
"


# ---------------------------------------------------------------------
# Interface
# ---------------------------------------------------------------------

case "$-" in
  *i*) INTERACTIVE=true ;;
  *) unset INTERACTIVE ;;
esac

test "$UNAME" = 'Darwin' && {
  MACOS=true
} || {
  unset MACOS
}

test -n "$(command -v vim)" && {
  EDITOR='vim'
  alias vi='vim'
} || {
  EDITOR='vi'
}
export EDITOR

GREP_COLOR='0;34'

LESS='-rI'
export PAGER='less'

test -z "$BASH_COMPLETION" && {
  for f in /usr/local/etc/bash_completion /etc/bash_completion; do
    test -f $f && {
      source $f
      break
    }
  done
}

# Disable tilde expansion
_expand() {
  return 0
}

test -n "$INTERACTIVE" && {
  stty -ixon
}

COLORS=$HOME/.config/colors/base16-custom.dark.sh
test -n "$TMUX" -a -f $COLORS && {
  source $COLORS
}

# Find and evaluate ``dircolors`` if exists on system
_dircolors="$(type -P gdircolors dircolors | head -1)"
test -n "$_dircolors" && {
  eval $($_dircolors -b ~/.bash/dircolors)
}


# ---------------------------------------------------------------------
# Prompt String 1
# ---------------------------------------------------------------------

clr() {  # (number, text)
  esc="\033"
  printf "\[$esc[38;5;%dm\]%s\[$esc[0m\]" "$1" "$2"
}

border_color=241
user_color=196
host_color=255
host_text='OSX'
pwd_color=228
test "$(whoami)" = 'root' && {
  user_color=220  # Yellow
}
PS1="\
`clr $border_color  '┌─['         `\
`clr $user_color    "$(whoami)"   `\
`clr 250            '@'           `\
`clr $host_color    "$host_text"  `\
`clr $border_color  ':'           `\
`clr $pwd_color     '\\w'         `\
`clr $border_color  ']'           `\
\n\
`clr $border_color  '└['          `\
`clr 7              '\\$'         `\
`clr $border_color  ']› '         `\
"

SHORT_PS1="\
`clr $border_color  '['     `\
`clr $pwd_color     '\\w'   `\
`clr $border_color  ']'     `\
\n\
`clr 7              '\\$ '  `\
"


# ---------------------------------------------------------------------
# Aliases
# ---------------------------------------------------------------------

_cp="$(type -P gcp cp | head -1)"
alias cp="$_cp -i"
alias grep='grep -i --color=auto'
alias mv='mv -i'

# ``ls`` wrangling
_ls='ls'
test "$(command -v gls)" && {
  _ls='gls'
}
if $_ls --color ~/ >/dev/null 2>&1; then
  GNU_LS=true
else
  BSD_LS=true
fi
if $GNU_LS; then
  alias ls="$_ls --color=auto --group-directories-first"
  alias lsld="ls -AGhlI'*'"
  alias lsd="ls -AI'*'"
elif $BSD_LS; then
  alias ls="$_ls -G"
fi
alias la='ls -A'
alias ll='ls -hl'
alias lla='ls -Ahl'


# Mini functions
alias bashrc='source ~/.bashrc'
alias cls="clear && printf '\e[3J'"
alias shortps1='export PS1=$SHORT_PS1'
alias rm-DS='find . -name .DS_Store -delete -print'
alias hide='chflags hidden'
alias nohide='chflags nohidden'

alias ..='cd ../'
for i in {2..8}; do
  alias .$i='cd '"$(printf '../%.0s' `seq 1 $i`)"
done

# Platform specific
test -n "$MACOS" && {
  alias top='top -u'
  alias mcopy='pbcopy'
  alias mpaste='pbpaste'
} || {
  alias mcopy='xclip -selection c'
  alias mpaste='xclip -o'
}


# ---------------------------------------------------------------------
# Python
# ---------------------------------------------------------------------

# My module
export PYTHONPATH="$HOME/.ipython/maneyko:$PYTHONPATH"

test -f "$HOME/.pythonrc.py" && {
  PYTHONSTARTUP="$HOME/.pythonrc.py"
}


# ---------------------------------------------------------------------
# User Environment
# ---------------------------------------------------------------------

test -f $HOME/.bash/greeting.bash && {
  source $HOME/.bash/greeting.bash
}

test -f $HOME/.bashrc.local && {
  source $HOME/.bashrc.local
}
