" vimrc
" ===========================================================================
"
" pathogen init
" =====================================
"
runtime bundle/vim-pathogen/autoload/pathogen.vim
execute pathogen#infect()
filetype plugin indent on

" UI
" =====================================
"
" visuals
set number                      " line numbers
set ruler                       " line & columns numbers on bottom
set showcmd                     " show command on bottom
set numberwidth=3               " width of line number column
set hlsearch                    " highlight search
set incsearch                   " move while typing search pattern
set scrolloff=5                 " keep cursor 5 lines frop top/bottom
set showbreak=...               " show ellipsis when going over
set list
set listchars=tab:\ \ ,trail:â‹…

" tab control
set tabstop=4                   " <tab> == 4 spaces
set shiftwidth=4                " number of spaces for indent and unindent
set softtabstop=4               " edit 4 spaces as if they are tabs
set expandtab                   " tab makes spaces
set autoindent                  " automatically indent new lines
set smartindent                 " knows when to indent
set smarttab                    " tab respects tab settings completely

" misc
set ignorecase                  " ignore case for search
set clipboard=unnamed           " system clipboard
set tildeop                     " tilde operator for changing CASE
let g:netrw_dirhistmax = 0      " no .netrwhist files

" colors
" ======================================
"
syntax on                       " syntax highlighting
set t_Co=256                    " terminal supports 256 colors

colorscheme colorsbox-stnight

" make bg and fg colors same as terminal
highlight Normal ctermbg=NONE
highlight Normal ctermfg=NONE

" remaps
" =====================================
"
let g:mapleader = ","

" spell check
nnoremap <silent> <leader>s :setlocal spell! spelllang=en_us<CR>

" redraw screen and remove highlights
nnoremap <silent> <C-l> :nohl<CR><C-l>

" enable relativenumber
nnoremap <silent> <C-n> :set relativenumber!<CR>

" use jk for scrolling the page
nnoremap <leader>v :call ReadMode(togg)<CR>

" change tabbing for whole file
nmap \t :set tabstop=4 softtabstop=4 shiftwidth=4 noexpandtab<CR>
      \:%retab!<CR>:echo "noexpandtab"<CR>
nmap \s :set tabstop=4 softtabstop=4 shiftwidth=4 expandtab<CR>
      \:%retab!<CR>:echo "expandtab"<CR>

" disable arrow keys
nnoremap <Up>       <NOP>
nnoremap <Down>     <NOP>
nnoremap <Left>     <NOP>
nnoremap <Right>    <NOP>

nnoremap Y y$

" paste from system register
inoremap <C-p>  <C-r>*
inoremap jk <ESC>

vnoremap . :normal .<CR>

" functions
" =====================================
"
if has('autocmd')
  autocmd BufNewFile,BufRead *tmux.conf set ft=sh
  autocmd Filetype vim setlocal ts=2 sw=2 sts=2 expandtab

endif

if has("mouse")
  set mouse=a
endif

if version >= 702
  au InsertEnter * :set nolist    " dont list trailing chars in insert
  au InsertLeave * :set list
endif

function LessInitFunc()
  highlight Normal ctermbg=NONE
  highlight Normal ctermfg=NONE
  set hlsearch incsearch wrapscan nonumber nolist
  set so=999
  if @% == '' | set ft=man | endif
endfunction

function PluginUpdate()
  !for file in $(ls ${HOME}/.vim/bundle/); do cd ${HOME}/.vim/bundle/$file && 
        \git fetch -v; done
endfunction

function! ReadMode(togg)
  if a:togg==0
    echo "Read Mode on"
    set so=999
    nnoremap q :q<CR>
    let g:togg=1
  else
    echo "Read Mode off"
    set so=5
    nunmap q
    let g:togg=0
  endif
endfunction
let g:togg=0
silent call ReadMode(togg)

" plugin options
" =====================================
"
let g:SuperTabDefaultCompletionType = "context" " contextual completion

